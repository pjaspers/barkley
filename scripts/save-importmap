#! /usr/bin/env ruby

require "json"
require "net/http"

# https://generator.jspm.io/#U2VhYGBkDM0rySzJSU1hcEjPLMkoTdIvSs1JLMksS9UtycxN1U3NSc1NzStxMNEz1jMEAP7dw1YyAA
#
# Get things from jspm.io, paste it below the __END__, then run this and past the output somewhere in a view
#
# But then maybe you also need to still fetch the dependencies you'll see when you hit the preload toggle:
#
#      curl -O "https://ga.jspm.io/npm:@github/relative-time-element@4.3.1/dist/relative-time-element-define.js"
#      curl -O "https://ga.jspm.io/npm:@github/relative-time-element@4.3.1/dist/relative-time-element.js"
#
# Sigh. Like most meetings could have been emails, most javascript could have been less javascript

import_map = JSON.parse(DATA.read)
root = File.expand_path(File.join(File.dirname(__FILE__), ".."))

map = {
  env: [
    "browser",
    "production",
    "module"
  ],
  imports: {}
}

to_import = import_map["imports"]
import_map.fetch("scopes", []).each do |_key, values|
  to_import.merge!(values)
end

to_import.each do |name, url|
  safe_name = name.gsub("/", "--") + ".js"
  path = File.join(root, "public/dist/#{safe_name}")
  map[:imports][name] = "./dist/#{safe_name}"
  next if File.exist?(path)

  uri = URI.parse(url)
  response = Net::HTTP.get_response(uri)
  File.open(path, "w") do |f|
    f.write response.body
  end
end

puts <<~HTML
<script type="importmap">
  #{JSON.pretty_generate(map)}
</script>

<!-- ES Module Shims: Import maps polyfill for older browsers without import maps support (eg Safari 16.3) -->
<script async src="https://ga.jspm.io/npm:es-module-shims@1.8.3/dist/es-module-shims.js" crossorigin="anonymous"></script
HTML

__END__
{
  "imports": {
    "@github/relative-time-element": "https://ga.jspm.io/npm:@github/relative-time-element@4.3.1/dist/index.js"
  }
}
